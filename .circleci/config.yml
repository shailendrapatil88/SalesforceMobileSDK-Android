aliases:
  - &setup-env
    name: Setup Envionrment
    shell: /bin/bash
    command: source .circleci/ci-helper.sh && envSetup

  - &determine-tests-to-run
    name: Determine Tests to Run
    shell: /bin/bash
    command: source .circleci/ci-helper.sh && printTestsToRun

  - &run-danger
    name:  Run Danger
    when: always
    command:  source .circleci/ci-helper.sh && runDanger

  - &android-lint
    name: Run Android Lint
    command:  ./gradlew lint
    when: always

  - &gradle-cache-key
    gradle-cache-v2-{{ checksum "build.gradle" }}-{{
      checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{
      checksum "libs/SalesforceAnalytics/build.gradle" }}-{{
      checksum "libs/SalesforceSDK/build.gradle" }}-{{
      checksum "libs/SmartStore/build.gradle" }}-{{
      checksum "libs/SmartSync/build.gradle" }}-{{
      checksum "libs/SalesforceHybrid/build.gradle" }}-{{
      checksum "libs/SalesforceReact/build.gradle" }}

  - &restore-gradle-cache
    keys:
      - *gradle-cache-key

  - &restore-node-cache
    keys:
      - node-cache-{{ checksum "package.json" }}

  - &restore-ruby-cache
    keys:
      - ruby-gem-cache-{{ .BuildNum }}
      - ruby-gem-cache-

  - &save-gradle-cache
    key: *gradle-cache-key
    paths:
      - .gradle
      - /home/circleci/.gradle

  - &save-node-cache
    key: node-cache-{{ checksum "package.json" }}
    paths:
      - node_modules

  - &save-ruby-cache
    key: ruby-gem-cache-{{ .BuildNum }}
    paths:
      - /home/circleci/.rubies

  - &codecov
    name: Codecov
    command: bash <(curl -s https://codecov.io/bash)
    when: always

  - &build-for-testing
    name: Build For Testing
    command: ./gradlew libs:${CURRENT_LIB}:assembleAndroidTest

  - &gcloud-auth
    name: Authorize gcloud and set config defaults
    command:  |
        echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
        gcloud --quiet config set project mobile-apps-firebase-test

  - &get-firebase-results
    name: Copy test results data
    command: |
        mkdir -p firebase/results
        gsutil -m cp -r -U "`gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/${CURRENT_LIB}-${CIRCLE_BUILD_NUM} | tail -1`*" ./firebase/
        mv firebase/test_result_1.xml firebase/results
    when: always

  - &run-firebase-tests
    name: Run Tests
    command: source .circleci/ci-helper.sh && runTests
    no_output_timeout: 600
    halt_build_on_fail: false

  - &attach_workspace
    attach_workspace:
      at: ~/SalesforceMobileSDK-Android

defaults: &defaults
  working_directory: ~/SalesforceMobileSDK-Android
  docker:
    - image: circleci/android:api-28-node8-alpha
  environment:
    - TERM: "dumb"
    - ADB_INSTALL_TIMEOUT: 15
    - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    - GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
    - ANDROID_NDK: '/opt/ndk/android-ndk-r10e'
    - BUILD_THREADS: 2


#########################
#                       #
#       Test Jobs       #
#                       #
#########################

version: 2
jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *setup-env
      - run: *android-lint
      - run:
          name: Build for Testing
          command:  |
            ./gradlew libs:SalesforceAnalytics:assembleAndroidTest
            ./gradlew libs:SalesforceSDK:assembleAndroidTest
            ./gradlew native:NativeSampleApps:RestExplorer:assembleAndroidTest
            ./gradlew :native:NativeSampleApps:RestExplorer:assembleDebug
      - run: *run-danger
      - save_cache: *save-gradle-cache
      - save_cache: *save-node-cache
      - save_cache: *save-ruby-cache
      - persist_to_workspace:
          root: .
          paths:
            - ./**

  test-SalesforceAnalytics:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceAnalytics"
      - TEST_APK: "libs/SalesforceAnalytics/build/outputs/apk/androidTest/debug/SalesforceAnalytics-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
            path: firebase/
      - store_test_results:
            path: firebase/results
      - run: *run-danger
      - run: *codecov

  test-SalesforceSDK:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceSDK"
      - TEST_APK: "libs/SalesforceSDK/build/outputs/apk/androidTest/debug/SalesforceSDK-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
            path: firebase/
      - store_test_results:
            path: firebase/results
      - run: *run-danger
      - run: *codecov

  test-SmartStore:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SmartStore"
      - TEST_APK: "libs/SmartStore/build/outputs/apk/androidTest/debug/SmartStore-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *build-for-testing
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
            path: firebase/
      - store_test_results:
            path: firebase/results
      - run: *run-danger
      - run: *codecov

  test-SmartSync:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SmartSync"
      - TEST_APK: "libs/SmartSync/build/outputs/apk/androidTest/debug/SmartSync-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *build-for-testing
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
            path: firebase/
      - store_test_results:
            path: firebase/results
      - run: *run-danger
      - run: *codecov

  test-SalesforceHybrid:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceHybrid"
      - TEST_APK: "libs/SalesforceHybrid/build/outputs/apk/androidTest/debug/SalesforceHybrid-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *build-for-testing
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
          path: firebase/
      - store_test_results:
          path: firebase/results
      - run: *run-danger
      - run: *codecov

  test-SalesforceReact:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceReact"
      - TEST_APK: "libs/SalesforceReact/build/outputs/apk/androidTest/debug/SalesforceReact-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *build-for-testing
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
            path: firebase/
      - store_test_results:
            path: firebase/results
      - run: *run-danger
      - run: *codecov

  test-RestExplorer:
    <<: *defaults
    environment:
      - CURRENT_LIB: "RestExplorer"
      - TEST_APK: "native/NativeSampleApps/RestExplorer/build/outputs/apk/androidTest/debug/RestExplorer-debug-androidTest.apk"
    steps:
      - *attach_workspace
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *gcloud-auth
      - run: *run-firebase-tests
      - run: *get-firebase-results
      - store_artifacts:
            path: firebase/
      - store_test_results:
            path: firebase/results
      - run: *run-danger
      - run: *codecov


##########################
#                        #
#      Nightly Jobs      #
#                        #
##########################

  generate-artifacts:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - run: *setup-env
      - save_cache: *save-node-cache
      - run:
          name: Build Libraries
          command:  |
            ./gradlew :libs:SalesforceAnalytics:assemble
            ./gradlew :libs:SalesforceSDK:assemble
            ./gradlew :libs:SmartStore:assemble
            ./gradlew :libs:SmartSync:assemble
            ./gradlew :libs:SalesforceHybrid:assemble
            ./gradlew :libs:SalesforceReact:assemble
          when: always
      - store_artifacts:
          path: libs/SalesforceAnalytics/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceSDK/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SmartStore/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SmartSync/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceHybrid/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceReact/build/outputs/aar/
          destination: libraries
      - run:
          name: Build Native Sample Apps
          when: always
          command:  |
            ./gradlew :native:NativeSampleApps:AppConfigurator:assemble
            ./gradlew :native:NativeSampleApps:ConfiguredApp:assemble
            ./gradlew :native:NativeSampleApps:RestExplorer:assemble
            ./gradlew :native:NativeSampleApps:SmartSyncExplorer:assemble
      - store_artifacts:
          path: native/NativeSampleApps/AppConfigurator/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/ConfiguredApp/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/RestExplorer/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/SmartSyncExplorer/build/outputs/apk/
          destination: native-apps
      - run:
          name: Build Hybrid Sample Apps
          when: always
          command:  |
            ./gradlew :hybrid:HybridSampleApps:AccountEditor:assemble
            ./gradlew :hybrid:HybridSampleApps:NoteSync:assemble
            ./gradlew :hybrid:HybridSampleApps:SmartSyncExplorerHybrid:assemble
      - store_artifacts:
          path: hybrid/HybridSampleApps/AccountEditor/build/outputs/apk/
          destination: hybrid-apps
      - store_artifacts:
          path: hybrid/HybridSampleApps/NoteSync/build/outputs/apk/
          destination: hybrid-apps
      - store_artifacts:
          path: hybrid/HybridSampleApps/SmartSyncExplorerHybrid/build/outputs/apk/
          destination: hybrid-apps
      - save_cache: *save-gradle-cache


#####################
#                   #
#     Workflows     #
#                   #
#####################

workflows:
  version: 2

  # PRs run on Android API 27
  pr-test:
    jobs:
      - setup:
          filters:
            branches:
              only:
                - /pull.*/
      - test-SalesforceAnalytics:
          requires:
            - setup
      - test-SalesforceSDK:
          requires:
            - setup
      - test-SmartStore:
          requires:
            - setup
      - test-SmartSync:
          requires:
            - setup
      - test-SalesforceHybrid:
          requires:
            - setup
      - test-RestExplorer:
          requires:
            - setup
      - test-SalesforceReact:
          requires:
            - setup

  # Cron are on a timezone 8 hours ahead of PST
  # Nightly run is set for ~10PM
  # Monday    - API 21
  # Wednesday - API 23
  # Friday    - API 25
  nightly-test:
     triggers:
       - schedule:
           cron: "00 6 * * 2,4,6"
           filters:
             branches:
               only:
                 - dev
     jobs:
        - generate-artifacts
        - setup
        - test-SalesforceAnalytics:
            context: nightly-test
            requires:
                - setup
        - test-SalesforceSDK:
            context: nightly-test
            requires:
                - setup
        - test-SmartStore:
            context: nightly-test
            requires:
                - setup
        - test-SmartSync:
            context: nightly-test
            requires:
                - setup
        - test-SalesforceHybrid:
            context: nightly-test
            requires:
                - setup
        - test-RestExplorer:
            context: nightly-test
            requires:
                - setup
        - test-SalesforceReact:
            context: nightly-test
            requires:
                - setup